<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guji.book.mapper.AncientPoemMapper">

    <resultMap type="AncientPoem" id="AncientPoemResult">
        <result property="ariId"    column="ari_id"    />
        <result property="content"    column="content"    />
        <result property="dynasty"    column="dynasty"    />
        <result property="author"    column="author"    />
        <result property="introduce"    column="introduce"    />
        <result property="category"    column="category"    />
        <result property="list"    column="list"    />
        <result property="name"    column="name"    />
    </resultMap>

    <sql id="selectAncientPoemVo">
        select ari_id, content, dynasty, author, introduce, category, list, name from ancient_poem
    </sql>

    <select id="selectAncientPoemList" parameterType="AncientPoem" resultMap="AncientPoemResult">
        <include refid="selectAncientPoemVo"/>
        <where>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="dynasty != null  and dynasty != ''"> and dynasty = #{dynasty}</if>
            <if test="author != null  and author != ''"> and author = #{author}</if>
            <if test="introduce != null  and introduce != ''"> and introduce = #{introduce}</if>
            <if test="category != null  and category != ''"> and category = #{category}</if>
            <if test="list != null  and list != ''"> and list = #{list}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
        </where>
    </select>

    <select id="selectAncientPoemByAriId" parameterType="Long" resultMap="AncientPoemResult">
        <include refid="selectAncientPoemVo"/>
        where ari_id = #{ariId}
    </select>

    <insert id="insertAncientPoem" parameterType="AncientPoem" useGeneratedKeys="true" keyProperty="ariId">
        insert into ancient_poem
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null">content,</if>
            <if test="dynasty != null">dynasty,</if>
            <if test="author != null">author,</if>
            <if test="introduce != null">introduce,</if>
            <if test="category != null">category,</if>
            <if test="list != null">list,</if>
            <if test="name != null">name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null">#{content},</if>
            <if test="dynasty != null">#{dynasty},</if>
            <if test="author != null">#{author},</if>
            <if test="introduce != null">#{introduce},</if>
            <if test="category != null">#{category},</if>
            <if test="list != null">#{list},</if>
            <if test="name != null">#{name},</if>
        </trim>
    </insert>

    <update id="updateAncientPoem" parameterType="AncientPoem">
        update ancient_poem
        <trim prefix="SET" suffixOverrides=",">
            <if test="content != null">content = #{content},</if>
            <if test="dynasty != null">dynasty = #{dynasty},</if>
            <if test="author != null">author = #{author},</if>
            <if test="introduce != null">introduce = #{introduce},</if>
            <if test="category != null">category = #{category},</if>
            <if test="list != null">list = #{list},</if>
            <if test="name != null">name = #{name},</if>
        </trim>
        where ari_id = #{ariId}
    </update>

    <delete id="deleteAncientPoemByAriId" parameterType="Long">
        delete from ancient_poem where ari_id = #{ariId}
    </delete>

    <delete id="deleteAncientPoemByAriIds" parameterType="String">
        delete from ancient_poem where ari_id in
        <foreach item="ariId" collection="array" open="(" separator="," close=")">
            #{ariId}
        </foreach>
    </delete>
</mapper>